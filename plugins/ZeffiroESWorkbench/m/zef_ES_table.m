function vec = zef_ES_table(varargin)

if isempty(varargin)
    m_aux = 0;
else
    m_aux = length(fieldnames(varargin{:}));
end

if m_aux == 0
    load_aux = evalin('base','zef.y_ES_interval');
else
    load_aux = varargin{:};
end

ES_y               = zeros(size(load_aux.y_ES));
ES_residual        = cell2mat(load_aux.residual);
ES_residual        = round(ES_residual/max(abs(ES_residual(:))),6);
ES_max             = zeros(size(load_aux.y_ES));
ES_flag            = cell2mat(load_aux.flag')';
ES_magnitude       = cell2mat(load_aux.field_source.magnitude')';
ES_angle_error     = cell2mat(load_aux.field_source.angle')';
ES_rela_norm       = cell2mat(load_aux.field_source.relative_norm_error')';
ES_rela_error      = cell2mat(load_aux.field_source.relative_error')';
ES_off_field       = cell2mat(load_aux.field_source.avg_off_field')';
ES_ratio           = max(0, ES_magnitude./ES_off_field);
ES_alpha           = load_aux.alpha;
ES_beta            = load_aux.beta;

for i = 1:size(load_aux.y_ES, 1)
    for j = 1:size(load_aux.y_ES, 2)
        ES_y(i,j)   =         norm(cell2mat(load_aux.y_ES(i,j)), 1);
        ES_max(i,j) =          max(cell2mat(load_aux.y_ES(i,j)));
    end
end

vec = array2table({...
    ES_y, ...
    ES_residual, ...
    ES_max, ...
    ES_flag, ...
    ES_magnitude, ...
    ES_angle_error, ...
    ES_rela_norm, ...
    ES_rela_error, ...
    ES_ratio, ...
    ES_alpha, ...
    ES_beta}, ...
    'VariableNames', ...
    {'Total dose', ...
    'Residual', ...
    'Maximum current (A)', ...
    'Optimizer Flag value', ...
    'Current density (A/m^2)', ...
    'Angle error (deg)', ...
    'Relative magnitude error', ...
    'Relative error', ...
    'Field ratio', ...
    'Alpha', ...
    'Beta'});
end