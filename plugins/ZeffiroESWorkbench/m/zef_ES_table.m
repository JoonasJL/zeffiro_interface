function vec = zef_ES_table(varargin)

if isempty(varargin)
    m_aux = 0;
else
    m_aux = length(fieldnames(varargin{:}));
end

if m_aux == 0
    load_aux = evalin('base','zef.y_ES_interval');
else
    load_aux = varargin{:};
end

ES_y               = zeros(size(load_aux.y_ES));
ES_cp_ratio               = zeros(size(load_aux.y_ES));
ES_residual        = cell2mat(load_aux.residual);
ES_residual        = round(100*ES_residual/max(abs(ES_residual(:))),6);
ES_max             = zeros(size(load_aux.y_ES));
ES_flag            = cell2mat(load_aux.flag')';
ES_amplitude      = cell2mat(load_aux.field_source.amplitude')';
ES_angle_error     = cell2mat(load_aux.field_source.angle')';
ES_mag       = 100*cell2mat(load_aux.field_source.relative_norm_error')';
ES_rdm      = 100*cell2mat(load_aux.field_source.relative_error')';
ES_off_field       = cell2mat(load_aux.field_source.avg_off_field')';
ES_run_time = cell2mat(load_aux.run_time')';
ES_field_ratio           = max(0, ES_amplitude./ES_off_field);
ES_alpha           = db(load_aux.alpha);
ES_beta            = db(load_aux.beta);
ES_nnz             = cell2mat(load_aux.nnz')';

for i = 1:size(load_aux.y_ES, 1)
    for j = 1:size(load_aux.y_ES, 2)
        ES_y(i,j)   =        1000* norm(cell2mat(load_aux.y_ES(i,j)), 1);
        ES_max(i,j) =          1000*max(abs(cell2mat(load_aux.y_ES(i,j))));
        ES_cp_ratio(i,j) = 100*2*max(abs(cell2mat(load_aux.y_ES(i,j))))./sum(abs(cell2mat(load_aux.y_ES(i,j))));
    end
end

vec = array2table({...
    ES_y, ...
    ES_residual, ...
    ES_max, ...
    ES_cp_ratio, ...
ES_amplitude,...
    ES_angle_error, ...
    ES_mag, ...
    ES_rdm, ...
    ES_field_ratio, ...
    ES_nnz,...
    ES_run_time,...
    ES_alpha, ...
    ES_beta,...
ES_flag}, ...
    'VariableNames', ...
    {'Total dose (mA)', ...
    'Residual (%)', ...
    'Maximum current (mA)', ...
    'Current pattern ratio (%)',...
    'Current density (A/m^2)', ...
    'Angle error (deg)', ...
    'Relative magnitude error (%)', ...
    'Relative difference measure (%)', ...
    'Field ratio', ...
    'NNZ',...
    'Run time (s)',...
    'Alpha (dB)', ...
    'Beta (dB)',...
    'Optimizer flag value'});
    vec.Properties.Description = ...
    ['Optimizer: ' evalin('base','zef.ES_search_type_list{zef.ES_search_type}') ', Algorithm: ' evalin('base','zef.ES_algorithm') '.'];
end